# Nazwa workflow
name: check_syntax

# Event, który wywoła workflow (tutaj: push do brancha main)
on:
  push:
    branches:
      - main

# Definicja pracy (job)
jobs:
  # Nazwa pracy
  check-syntax:
    # Środowisko, na którym ma być uruchomiona praca 
    runs-on: ${{ matrix.os }}

    # Konfiguracja macierzy, która pozwala na równoległe uruchamianie pracy na różnych konfiguracjach
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
        exclude:
          - os: ubuntu-latest
            python-version: "3.10"

    # Kroki (steps) do wykonania w ramach pracy
    steps:
      # Klonowanie repozytorium
      - uses: actions/checkout@v4

      # Konfiguracja wersji Pythona
      - name: set_up_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Aktualizacja narzędzia pip
      - name: pip_update
        run: |
          python -m pip install --upgrade pip

      # Instalacja narzędzi flake8 (do analizy kodu) i unittest (do uruchamiania testów jednostkowych)
      - name: flake8&unittest_install
        run: |
          python -m pip install flake8
          #python -m pip install 

      # Wyświetlenie wersji Pythona i pip
      - name: python_version
        run: |
          python --version
          pip --version

      # Analiza kodu za pomocą flake8
      - name: flake8_code_analysis
        run: |
          flake8 .

      # Uruchomienie testów jednostkowych za pomocą unittest
      - name: unittest_tests
        run: |
          python -m unittest discover -v
